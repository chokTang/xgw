apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        debug {
            storeFile file('C:\\Users\\123\\Desktop\\xigui.jks')
            storePassword 'xiguiwang'
            keyAlias = 'wanbigui'
            keyPassword 'xiguiwang'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wbg.xigui"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "d61d8799ae01696c290b0625", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    packagingOptions {
        exclude 'android/databinding/DataBinderMapper.java'
        exclude 'android/databinding/DataBindingComponent.java'
        exclude 'android/databinding/DynamicUtil.java'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def formattedDate = new Date().format('MMdd')
            def formattedMinute = new Date().format('HHmm')
            def newName = ("xgw-v-" + variant.versionName + "_test_D" + formattedDate + "_T" + formattedMinute + ".apk")
            outputFileName = new File(newName)
        }
    }
}
repositories {
    maven { url "https://jitpack.io" }
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.kw:rxbus:1.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:3.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:3.0.0'
    // Android 支持 Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    // 衔接 Retrofit & RxJava
    // 此处一定要注意使用RxJava2的版本
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // 支持Gson解析
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //阿里路由
    implementation 'com.alibaba:arouter-api:1.4.0'
    kapt 'com.android.databinding:compiler:3.1.4'
    kapt 'com.alibaba:arouter-annotation:1.0.6'
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    //注意版本号
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    //刷新框架
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    //没有使用特殊Header，可以不加这行
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0-beta05'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0-beta05'
    // kotlin扩展（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0-beta05'
    //图片选择
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'
    //banner
    implementation 'com.youth.banner:banner:1.4.10'
    //消息红点
    implementation 'q.rorbin:badgeview:1.1.3'
    implementation 'com.github.qingtenglv:ImageRatingView:v1.0.2'
    //星星
    implementation 'com.makeramen:roundedimageview:2.3.0'
    api 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation files('libs/BaiduLBS_Android.jar')
    // 权限请求
    implementation 'pub.devrel:easypermissions:1.0.1'
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'
    implementation(name: 'alipaySdk-15.6.4-20190611174341', ext: 'aar')
    implementation project(path: ':hellocharts-library')
    //微信mm
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //二维码扫描
    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    //适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'

    //流式布局
    implementation 'com.hyman:flowlayout-lib:1.1.2'

    //三级联动
    implementation 'com.contrarywind:Android-PickerView:4.1.8'

    //recycview 实现翻页操作
    implementation 'com.gcssloop.recyclerview:pagerlayoutmanager:2.3.7'

    implementation 'cn.jiguang.sdk:jpush:3.3.4'  // 此处以JPush 3.3.4 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.1.2'  // 此处以JCore 2.1.2 版本为例。

    //银行卡折叠view
    implementation 'com.loopeer.library:cardstack:1.0.2'

    //二维码生成
    implementation 'cn.bingoogolapple:bga-qrcodecore:1.1.7@aar'
    implementation 'cn.bingoogolapple:bga-zxing:1.1.7@aar'
}
